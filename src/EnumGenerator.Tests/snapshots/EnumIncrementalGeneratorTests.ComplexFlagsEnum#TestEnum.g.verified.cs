//HintName: TestEnum.g.cs
// <auto-generated>
// This code was generated by EnumGenerator.
// </auto-generated>

#nullable enable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace Tests;

public static class TestEnumGen
{
	private static readonly Dictionary<Tests.TestEnum, string> _stringValues = new()
	{
		{ (Tests.TestEnum)0, "None" },
		{ (Tests.TestEnum)1, "Entry1" },
		{ (Tests.TestEnum)2, "Entry2" },
		{ (Tests.TestEnum)3, "Entry1, Entry2" },
		{ (Tests.TestEnum)4, "Entry3" },
		{ (Tests.TestEnum)5, "Entry1, Entry3" },
		{ (Tests.TestEnum)6, "Entry2, Entry3" },
		{ (Tests.TestEnum)7, "Entry1, Entry2, Entry3" },
		{ (Tests.TestEnum)8, "Entry4" },
		{ (Tests.TestEnum)9, "Entry1, Entry4" },
		{ (Tests.TestEnum)10, "Entry2, Entry4" },
		{ (Tests.TestEnum)11, "Entry1, Entry2, Entry4" },
		{ (Tests.TestEnum)12, "Entry3, Entry4" },
		{ (Tests.TestEnum)13, "Entry1, Entry3, Entry4" },
		{ (Tests.TestEnum)14, "Entry2, Entry3, Entry4" },
		{ (Tests.TestEnum)15, "Entry1, Entry2, Entry3, Entry4" },
		{ (Tests.TestEnum)32, "Option1" },
		{ (Tests.TestEnum)33, "Entry1, Option1" },
		{ (Tests.TestEnum)34, "Entry2, Option1" },
		{ (Tests.TestEnum)35, "Entry1, Entry2, Option1" },
		{ (Tests.TestEnum)36, "Entry3, Option1" },
		{ (Tests.TestEnum)37, "Entry1, Entry3, Option1" },
		{ (Tests.TestEnum)38, "Entry2, Entry3, Option1" },
		{ (Tests.TestEnum)39, "Entry1, Entry2, Entry3, Option1" },
		{ (Tests.TestEnum)40, "Entry4, Option1" },
		{ (Tests.TestEnum)41, "Entry1, Entry4, Option1" },
		{ (Tests.TestEnum)42, "Entry2, Entry4, Option1" },
		{ (Tests.TestEnum)43, "Entry1, Entry2, Entry4, Option1" },
		{ (Tests.TestEnum)44, "Entry3, Entry4, Option1" },
		{ (Tests.TestEnum)45, "Entry1, Entry3, Entry4, Option1" },
		{ (Tests.TestEnum)46, "Entry2, Entry3, Entry4, Option1" },
		{ (Tests.TestEnum)47, "Entry1, Entry2, Entry3, Entry4, Option1" },
		{ (Tests.TestEnum)64, "Option2" },
		{ (Tests.TestEnum)65, "Entry1, Option2" },
		{ (Tests.TestEnum)66, "Entry2, Option2" },
		{ (Tests.TestEnum)67, "Entry1, Entry2, Option2" },
		{ (Tests.TestEnum)68, "Entry3, Option2" },
		{ (Tests.TestEnum)69, "Entry1, Entry3, Option2" },
		{ (Tests.TestEnum)70, "Entry2, Entry3, Option2" },
		{ (Tests.TestEnum)71, "Entry1, Entry2, Entry3, Option2" },
		{ (Tests.TestEnum)72, "Entry4, Option2" },
		{ (Tests.TestEnum)73, "Entry1, Entry4, Option2" },
		{ (Tests.TestEnum)74, "Entry2, Entry4, Option2" },
		{ (Tests.TestEnum)75, "Entry1, Entry2, Entry4, Option2" },
		{ (Tests.TestEnum)76, "Entry3, Entry4, Option2" },
		{ (Tests.TestEnum)77, "Entry1, Entry3, Entry4, Option2" },
		{ (Tests.TestEnum)78, "Entry2, Entry3, Entry4, Option2" },
		{ (Tests.TestEnum)79, "Entry1, Entry2, Entry3, Entry4, Option2" },
		{ (Tests.TestEnum)96, "Option1, Option2" },
		{ (Tests.TestEnum)97, "Entry1, Option1, Option2" },
		{ (Tests.TestEnum)98, "Entry2, Option1, Option2" },
		{ (Tests.TestEnum)99, "Entry1, Entry2, Option1, Option2" },
		{ (Tests.TestEnum)100, "Entry3, Option1, Option2" },
		{ (Tests.TestEnum)101, "Entry1, Entry3, Option1, Option2" },
		{ (Tests.TestEnum)102, "Entry2, Entry3, Option1, Option2" },
		{ (Tests.TestEnum)103, "Entry1, Entry2, Entry3, Option1, Option2" },
		{ (Tests.TestEnum)104, "Entry4, Option1, Option2" },
		{ (Tests.TestEnum)105, "Entry1, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)106, "Entry2, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)107, "Entry1, Entry2, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)108, "Entry3, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)109, "Entry1, Entry3, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)110, "Entry2, Entry3, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)111, "Entry1, Entry2, Entry3, Entry4, Option1, Option2" },
		{ (Tests.TestEnum)128, "Option3" },
		{ (Tests.TestEnum)129, "Entry1, Option3" },
		{ (Tests.TestEnum)130, "Entry2, Option3" },
		{ (Tests.TestEnum)131, "Entry1, Entry2, Option3" },
		{ (Tests.TestEnum)132, "Entry3, Option3" },
		{ (Tests.TestEnum)133, "Entry1, Entry3, Option3" },
		{ (Tests.TestEnum)134, "Entry2, Entry3, Option3" },
		{ (Tests.TestEnum)135, "Entry1, Entry2, Entry3, Option3" },
		{ (Tests.TestEnum)136, "Entry4, Option3" },
		{ (Tests.TestEnum)137, "Entry1, Entry4, Option3" },
		{ (Tests.TestEnum)138, "Entry2, Entry4, Option3" },
		{ (Tests.TestEnum)139, "Entry1, Entry2, Entry4, Option3" },
		{ (Tests.TestEnum)140, "Entry3, Entry4, Option3" },
		{ (Tests.TestEnum)141, "Entry1, Entry3, Entry4, Option3" },
		{ (Tests.TestEnum)142, "Entry2, Entry3, Entry4, Option3" },
		{ (Tests.TestEnum)143, "Entry1, Entry2, Entry3, Entry4, Option3" },
		{ (Tests.TestEnum)160, "Option1, Option3" },
		{ (Tests.TestEnum)161, "Entry1, Option1, Option3" },
		{ (Tests.TestEnum)162, "Entry2, Option1, Option3" },
		{ (Tests.TestEnum)163, "Entry1, Entry2, Option1, Option3" },
		{ (Tests.TestEnum)164, "Entry3, Option1, Option3" },
		{ (Tests.TestEnum)165, "Entry1, Entry3, Option1, Option3" },
		{ (Tests.TestEnum)166, "Entry2, Entry3, Option1, Option3" },
		{ (Tests.TestEnum)167, "Entry1, Entry2, Entry3, Option1, Option3" },
		{ (Tests.TestEnum)168, "Entry4, Option1, Option3" },
		{ (Tests.TestEnum)169, "Entry1, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)170, "Entry2, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)171, "Entry1, Entry2, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)172, "Entry3, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)173, "Entry1, Entry3, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)174, "Entry2, Entry3, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)175, "Entry1, Entry2, Entry3, Entry4, Option1, Option3" },
		{ (Tests.TestEnum)192, "Option2, Option3" },
		{ (Tests.TestEnum)193, "Entry1, Option2, Option3" },
		{ (Tests.TestEnum)194, "Entry2, Option2, Option3" },
		{ (Tests.TestEnum)195, "Entry1, Entry2, Option2, Option3" },
		{ (Tests.TestEnum)196, "Entry3, Option2, Option3" },
		{ (Tests.TestEnum)197, "Entry1, Entry3, Option2, Option3" },
		{ (Tests.TestEnum)198, "Entry2, Entry3, Option2, Option3" },
		{ (Tests.TestEnum)199, "Entry1, Entry2, Entry3, Option2, Option3" },
		{ (Tests.TestEnum)200, "Entry4, Option2, Option3" },
		{ (Tests.TestEnum)201, "Entry1, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)202, "Entry2, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)203, "Entry1, Entry2, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)204, "Entry3, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)205, "Entry1, Entry3, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)206, "Entry2, Entry3, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)207, "Entry1, Entry2, Entry3, Entry4, Option2, Option3" },
		{ (Tests.TestEnum)224, "Option1, Option2, Option3" },
		{ (Tests.TestEnum)225, "Entry1, Option1, Option2, Option3" },
		{ (Tests.TestEnum)226, "Entry2, Option1, Option2, Option3" },
		{ (Tests.TestEnum)227, "Entry1, Entry2, Option1, Option2, Option3" },
		{ (Tests.TestEnum)228, "Entry3, Option1, Option2, Option3" },
		{ (Tests.TestEnum)229, "Entry1, Entry3, Option1, Option2, Option3" },
		{ (Tests.TestEnum)230, "Entry2, Entry3, Option1, Option2, Option3" },
		{ (Tests.TestEnum)231, "Entry1, Entry2, Entry3, Option1, Option2, Option3" },
		{ (Tests.TestEnum)232, "Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)233, "Entry1, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)234, "Entry2, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)235, "Entry1, Entry2, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)236, "Entry3, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)237, "Entry1, Entry3, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)238, "Entry2, Entry3, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)239, "Entry1, Entry2, Entry3, Entry4, Option1, Option2, Option3" },
		{ (Tests.TestEnum)2048, "Option4" },
		{ (Tests.TestEnum)2049, "Entry1, Option4" },
		{ (Tests.TestEnum)2050, "Entry2, Option4" },
		{ (Tests.TestEnum)2051, "Entry1, Entry2, Option4" },
		{ (Tests.TestEnum)2052, "Entry3, Option4" },
		{ (Tests.TestEnum)2053, "Entry1, Entry3, Option4" },
		{ (Tests.TestEnum)2054, "Entry2, Entry3, Option4" },
		{ (Tests.TestEnum)2055, "Entry1, Entry2, Entry3, Option4" },
		{ (Tests.TestEnum)2056, "Entry4, Option4" },
		{ (Tests.TestEnum)2057, "Entry1, Entry4, Option4" },
		{ (Tests.TestEnum)2058, "Entry2, Entry4, Option4" },
		{ (Tests.TestEnum)2059, "Entry1, Entry2, Entry4, Option4" },
		{ (Tests.TestEnum)2060, "Entry3, Entry4, Option4" },
		{ (Tests.TestEnum)2061, "Entry1, Entry3, Entry4, Option4" },
		{ (Tests.TestEnum)2062, "Entry2, Entry3, Entry4, Option4" },
		{ (Tests.TestEnum)2063, "Entry1, Entry2, Entry3, Entry4, Option4" },
		{ (Tests.TestEnum)2080, "Option1, Option4" },
		{ (Tests.TestEnum)2081, "Entry1, Option1, Option4" },
		{ (Tests.TestEnum)2082, "Entry2, Option1, Option4" },
		{ (Tests.TestEnum)2083, "Entry1, Entry2, Option1, Option4" },
		{ (Tests.TestEnum)2084, "Entry3, Option1, Option4" },
		{ (Tests.TestEnum)2085, "Entry1, Entry3, Option1, Option4" },
		{ (Tests.TestEnum)2086, "Entry2, Entry3, Option1, Option4" },
		{ (Tests.TestEnum)2087, "Entry1, Entry2, Entry3, Option1, Option4" },
		{ (Tests.TestEnum)2088, "Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2089, "Entry1, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2090, "Entry2, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2091, "Entry1, Entry2, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2092, "Entry3, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2093, "Entry1, Entry3, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2094, "Entry2, Entry3, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2095, "Entry1, Entry2, Entry3, Entry4, Option1, Option4" },
		{ (Tests.TestEnum)2112, "Option2, Option4" },
		{ (Tests.TestEnum)2113, "Entry1, Option2, Option4" },
		{ (Tests.TestEnum)2114, "Entry2, Option2, Option4" },
		{ (Tests.TestEnum)2115, "Entry1, Entry2, Option2, Option4" },
		{ (Tests.TestEnum)2116, "Entry3, Option2, Option4" },
		{ (Tests.TestEnum)2117, "Entry1, Entry3, Option2, Option4" },
		{ (Tests.TestEnum)2118, "Entry2, Entry3, Option2, Option4" },
		{ (Tests.TestEnum)2119, "Entry1, Entry2, Entry3, Option2, Option4" },
		{ (Tests.TestEnum)2120, "Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2121, "Entry1, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2122, "Entry2, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2123, "Entry1, Entry2, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2124, "Entry3, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2125, "Entry1, Entry3, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2126, "Entry2, Entry3, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2127, "Entry1, Entry2, Entry3, Entry4, Option2, Option4" },
		{ (Tests.TestEnum)2144, "Option1, Option2, Option4" },
		{ (Tests.TestEnum)2145, "Entry1, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2146, "Entry2, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2147, "Entry1, Entry2, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2148, "Entry3, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2149, "Entry1, Entry3, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2150, "Entry2, Entry3, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2151, "Entry1, Entry2, Entry3, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2152, "Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2153, "Entry1, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2154, "Entry2, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2155, "Entry1, Entry2, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2156, "Entry3, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2157, "Entry1, Entry3, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2158, "Entry2, Entry3, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2159, "Entry1, Entry2, Entry3, Entry4, Option1, Option2, Option4" },
		{ (Tests.TestEnum)2176, "Option3, Option4" },
		{ (Tests.TestEnum)2177, "Entry1, Option3, Option4" },
		{ (Tests.TestEnum)2178, "Entry2, Option3, Option4" },
		{ (Tests.TestEnum)2179, "Entry1, Entry2, Option3, Option4" },
		{ (Tests.TestEnum)2180, "Entry3, Option3, Option4" },
		{ (Tests.TestEnum)2181, "Entry1, Entry3, Option3, Option4" },
		{ (Tests.TestEnum)2182, "Entry2, Entry3, Option3, Option4" },
		{ (Tests.TestEnum)2183, "Entry1, Entry2, Entry3, Option3, Option4" },
		{ (Tests.TestEnum)2184, "Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2185, "Entry1, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2186, "Entry2, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2187, "Entry1, Entry2, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2188, "Entry3, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2189, "Entry1, Entry3, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2190, "Entry2, Entry3, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2191, "Entry1, Entry2, Entry3, Entry4, Option3, Option4" },
		{ (Tests.TestEnum)2208, "Option1, Option3, Option4" },
		{ (Tests.TestEnum)2209, "Entry1, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2210, "Entry2, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2211, "Entry1, Entry2, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2212, "Entry3, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2213, "Entry1, Entry3, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2214, "Entry2, Entry3, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2215, "Entry1, Entry2, Entry3, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2216, "Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2217, "Entry1, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2218, "Entry2, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2219, "Entry1, Entry2, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2220, "Entry3, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2221, "Entry1, Entry3, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2222, "Entry2, Entry3, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2223, "Entry1, Entry2, Entry3, Entry4, Option1, Option3, Option4" },
		{ (Tests.TestEnum)2240, "Option2, Option3, Option4" },
		{ (Tests.TestEnum)2241, "Entry1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2242, "Entry2, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2243, "Entry1, Entry2, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2244, "Entry3, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2245, "Entry1, Entry3, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2246, "Entry2, Entry3, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2247, "Entry1, Entry2, Entry3, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2248, "Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2249, "Entry1, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2250, "Entry2, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2251, "Entry1, Entry2, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2252, "Entry3, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2253, "Entry1, Entry3, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2254, "Entry2, Entry3, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2255, "Entry1, Entry2, Entry3, Entry4, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2272, "Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2273, "Entry1, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2274, "Entry2, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2275, "Entry1, Entry2, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2276, "Entry3, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2277, "Entry1, Entry3, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2278, "Entry2, Entry3, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2279, "Entry1, Entry2, Entry3, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2280, "Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2281, "Entry1, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2282, "Entry2, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2283, "Entry1, Entry2, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2284, "Entry3, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2285, "Entry1, Entry3, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2286, "Entry2, Entry3, Entry4, Option1, Option2, Option3, Option4" },
		{ (Tests.TestEnum)2287, "Entry1, Entry2, Entry3, Entry4, Option1, Option2, Option3, Option4" },
	};
	private static readonly Dictionary<Tests.TestEnum, byte[]> _utf8Cache = new();

	public static IReadOnlyList<Tests.TestEnum> Values { get; } = Enum.GetValues<Tests.TestEnum>();

	public static ReadOnlySpan<byte> NullTerminatedMemberNames => "None\0Entry1\0Entry2\0Entry3\0Entry4\0Option1\0Option2\0Option3\0Option4\0"u8;

	public static string ToStringFast(this Tests.TestEnum value)
	{
		return _stringValues.TryGetValue(value, out string? stringValue) ? stringValue : throw new ArgumentOutOfRangeException(nameof(value), value, null);
	}

	public static ReadOnlySpan<byte> AsUtf8Span(this Tests.TestEnum value)
	{
		if (!_stringValues.TryGetValue(value, out string? str))
			throw new ArgumentOutOfRangeException(nameof(value), value, null);

		if (!_utf8Cache.TryGetValue(value, out byte[]? bytes))
		{
			bytes = Encoding.UTF8.GetBytes(str);
			_utf8Cache[value] = bytes;
		}

		return new ReadOnlySpan<byte>(bytes);
	}

	public static int GetIndex(this Tests.TestEnum value)
	{
		return value switch
		{
			Tests.TestEnum.None => 0,
			Tests.TestEnum.Entry1 => 1,
			Tests.TestEnum.Entry2 => 2,
			Tests.TestEnum.Entry3 => 3,
			Tests.TestEnum.Entry4 => 4,
			Tests.TestEnum.Option1 => 5,
			Tests.TestEnum.Option2 => 6,
			Tests.TestEnum.Option3 => 7,
			Tests.TestEnum.Option4 => 8,
			_ => throw new ArgumentOutOfRangeException(nameof(value), value, null),
		};
	}

	public static Tests.TestEnum FromIndex(int index)
	{
		return index switch
		{
			0 => Tests.TestEnum.None,
			1 => Tests.TestEnum.Entry1,
			2 => Tests.TestEnum.Entry2,
			3 => Tests.TestEnum.Entry3,
			4 => Tests.TestEnum.Entry4,
			5 => Tests.TestEnum.Option1,
			6 => Tests.TestEnum.Option2,
			7 => Tests.TestEnum.Option3,
			8 => Tests.TestEnum.Option4,
			_ => throw new ArgumentOutOfRangeException(nameof(index), index, null),
		};
	}

	public static void Write(this BinaryWriter writer, Tests.TestEnum value)
	{
		writer.Write((ushort)value);
	}

	public static Tests.TestEnum ReadTestEnum(this BinaryReader reader)
	{
		return (Tests.TestEnum)reader.ReadUInt16();
	}

	public static bool HasFlagFast(this Tests.TestEnum value, Tests.TestEnum flag)
	{
		return (value & flag) != 0;
	}
}
