//HintName: BlendEquationModeEXT.g.cs
// <auto-generated>
// This code was generated by EnumGenerator.
// </auto-generated>

#nullable enable

using System;
using System.Collections.Generic;

namespace Tests;

public static class BlendEquationModeEXTUtils
{
	public static IReadOnlyList<Tests.BlendEquationModeEXT> Values { get; } = Enum.GetValues<Tests.BlendEquationModeEXT>();

	public static ReadOnlySpan<byte> NullTerminatedMemberNames => "FuncAdd\0Min\0Max\0FuncSubtract\0FuncReverseSubtract\0AlphaMinSgix\0AlphaMaxSgix\0"u8;

	public static string ToStringFast(this Tests.BlendEquationModeEXT value)
	{
		return value switch
		{
			Tests.BlendEquationModeEXT.FuncAdd => "FuncAdd",
			Tests.BlendEquationModeEXT.Min => "Min",
			Tests.BlendEquationModeEXT.Max => "Max",
			Tests.BlendEquationModeEXT.FuncSubtract => "FuncSubtract",
			Tests.BlendEquationModeEXT.FuncReverseSubtract => "FuncReverseSubtract",
			Tests.BlendEquationModeEXT.AlphaMinSgix => "AlphaMinSgix",
			Tests.BlendEquationModeEXT.AlphaMaxSgix => "AlphaMaxSgix",
			_ => throw new ArgumentOutOfRangeException(nameof(value), value, null),
		};
	}

	public static ReadOnlySpan<byte> AsUtf8Span(this Tests.BlendEquationModeEXT value)
	{
		return value switch
		{
			Tests.BlendEquationModeEXT.FuncAdd => "FuncAdd"u8,
			Tests.BlendEquationModeEXT.Min => "Min"u8,
			Tests.BlendEquationModeEXT.Max => "Max"u8,
			Tests.BlendEquationModeEXT.FuncSubtract => "FuncSubtract"u8,
			Tests.BlendEquationModeEXT.FuncReverseSubtract => "FuncReverseSubtract"u8,
			Tests.BlendEquationModeEXT.AlphaMinSgix => "AlphaMinSgix"u8,
			Tests.BlendEquationModeEXT.AlphaMaxSgix => "AlphaMaxSgix"u8,
			_ => throw new ArgumentOutOfRangeException(nameof(value), value, null),
		};
	}
}
